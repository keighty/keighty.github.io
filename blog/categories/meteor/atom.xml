<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Meteor | keighty]]></title>
  <link href="http://www.katieleonard.ca/blog/categories/meteor/atom.xml" rel="self"/>
  <link href="http://www.katieleonard.ca/"/>
  <updated>2014-04-01T07:39:20-07:00</updated>
  <id>http://www.katieleonard.ca/</id>
  <author>
    <name><![CDATA[katie leonard]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Meteor, Fetch!]]></title>
    <link href="http://www.katieleonard.ca/blog/2014/meteor-fetch/"/>
    <updated>2014-03-31T00:00:00-07:00</updated>
    <id>http://www.katieleonard.ca/blog/2014/meteor-fetch</id>
    <content type="html"><![CDATA[<p>From <a href="http://book.discovermeteor.com/">Discover Meteor</a>: in Meteor, find() returns a cursor, which is a reactive data source.</p>

<p>Data from reactive data sources will be updated automatically to track changes in the data used to generate it. <!--more-->Cursors are derived from specific sources:</p>

<ul>
<li>Session variables</li>
<li>Database queries on Collections</li>
<li>Meteor.status</li>
<li>The ready() method on a subscription handle</li>
<li>Meteor.user</li>
<li>Meteor.userId</li>
<li>Meteor.loggingIn</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>For example, find() using a database query </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nx">Posts</span><span class="p">.</span><span class="nx">find</span><span class="p">()</span>
</span><span class='line'><span class="nx">LocalCollection</span><span class="p">.</span><span class="nx">Cursor</span> <span class="p">{</span><span class="nx">collection</span><span class="o">:</span> <span class="nx">LocalCollection</span><span class="p">,</span> <span class="nx">sorter</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="nx">_selectorId</span><span class="o">:</span> <span class="kc">undefined</span><span class="p">,</span> <span class="nx">matcher</span><span class="o">:</span> <span class="nx">Minimongo</span><span class="p">.</span><span class="nx">Matcher</span><span class="p">,</span> <span class="nx">skip</span><span class="o">:</span> <span class="kc">undefined</span><span class="err">â€¦</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>  <span class="nx">_selectorId</span><span class="o">:</span> <span class="kc">undefined</span>
</span><span class='line'>  <span class="nx">_transform</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>  <span class="nx">collection</span><span class="o">:</span> <span class="nx">LocalCollection</span>
</span><span class='line'>  <span class="nx">cursor_pos</span><span class="o">:</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">db_objects</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>  <span class="nx">fields</span><span class="o">:</span> <span class="kc">undefined</span>
</span><span class='line'>  <span class="nx">limit</span><span class="o">:</span> <span class="kc">undefined</span>
</span><span class='line'>  <span class="nx">matcher</span><span class="o">:</span> <span class="nx">Minimongo</span><span class="p">.</span><span class="nx">Matcher</span>
</span><span class='line'>  <span class="nx">reactive</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>  <span class="nx">skip</span><span class="o">:</span> <span class="kc">undefined</span>
</span><span class='line'>  <span class="nx">sorter</span><span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>  <span class="nx">__proto__</span><span class="o">:</span> <span class="nb">Object</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Cursors are not query snapshots. They are query snapshot containers &mdash; the contents of which are updated by changes to the underlying data. To interact with the data contained in a cursor, we can use fetch() to transform the cursor into an array.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>A cursor becomes an array with find().fetch() </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="nx">Posts</span><span class="p">.</span><span class="nx">find</span><span class="p">().</span><span class="nx">fetch</span><span class="p">()</span>
</span><span class='line'><span class="p">[</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nb">Object</span>
</span><span class='line'><span class="nx">_id</span><span class="o">:</span> <span class="s2">&quot;z4z36DFCaGr8Ptuqd&quot;</span>
</span><span class='line'><span class="nx">title</span><span class="o">:</span> <span class="s2">&quot;The Way We Live Now&quot;</span>
</span><span class='line'><span class="nx">author</span><span class="o">:</span> <span class="s2">&quot;Anthony Trollope&quot;</span>
</span><span class='line'><span class="nx">__proto__</span><span class="o">:</span> <span class="nb">Object</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Meteor can iterate over a cursor without first converting it to an array, but in order to interact with the data directly, you must first use fetch(), map(), or forEach(). For more cursor fun, checkout the <a href="http://docs.meteor.com/#reactivity">Meteor docs</a>.</p>

<p>Awesome.</p>
]]></content>
  </entry>
  
</feed>
