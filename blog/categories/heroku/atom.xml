<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Heroku | keighty]]></title>
  <link href="http://www.katieleonard.ca/blog/categories/heroku/atom.xml" rel="self"/>
  <link href="http://www.katieleonard.ca/"/>
  <updated>2014-02-13T19:43:36-08:00</updated>
  <id>http://www.katieleonard.ca/</id>
  <author>
    <name><![CDATA[katie leonard]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Procuring Provisions]]></title>
    <link href="http://www.katieleonard.ca/blog/2013/procuring-provisions/"/>
    <updated>2013-07-27T22:29:03-07:00</updated>
    <id>http://www.katieleonard.ca/blog/2013/procuring-provisions</id>
    <content type="html"><![CDATA[<p>I was trying to add a database to my JSGames app &mdash; it is a basic sinatra app with a few goodies already in place &mdash; and I was having some difficulty deploying it to Heroku. Rails (for the most part) automagically creates and maintains its database, and as long as I remember to move any references to sqlite3 into the development and test environments, I have never had trouble provisioning one on Heroku either. Rolling a web application from scratch with sinatra, however, requires a little more savvy.</p>

<!--more-->


<p>My Gemfile had a familiar structure:</p>

<p>{% highlight ruby %}
source &lsquo;<a href="https://rubygems.org">https://rubygems.org</a>&rsquo;
ruby &lsquo;2.0.0&rsquo;
&hellip;
gem &ldquo;sinatra&rdquo;
gem &ldquo;activerecord&rdquo;
gem &ldquo;sinatra-activerecord&rdquo;
gem &ldquo;pg&rdquo;{% endhighlight %}</p>

<p>So far, so familiar. I added config/environments.rb to outline the details of the database I would like provisioned (using postgres locally as well as in production):</p>

<p>{% highlight ruby %}
require &lsquo;active_record&rsquo;
require &lsquo;uri&rsquo;
&hellip;
db = URI.parse(ENV[&lsquo;DATABASE_URL&rsquo;] || &lsquo;postgres://localhost/mydb&rsquo;)
ActiveRecord::Base.establish_connection(
  :adapter  => db.scheme == &lsquo;postgres&rsquo; ? &lsquo;postgresql&rsquo; : db.scheme,
  :host     => db.host,
  :port     => db.port,
  :username => db.user,
  :password => db.password,
  :database => db.path[1..-1],
  :encoding => &lsquo;utf8&rsquo;
) {% endhighlight %}</p>

<p>With everything complete, I created a couple of models, migrated, tested it locally, and committed the changes. Heroku compiles the slug just fine, but when I open the application I get the too familiar &ldquo;Application Error&rdquo; page. The logs tell me: <pre>ERROR: Invalid DATABASE_URL</pre></p>

<p>Huh? My url is the one that Heroku suggested! How can it be invalid? It was working fine locally, what is the problem? Here is a sample of my google searches from that frantic afternoon:
* ERROR: Invalid DATABASE_URL heroku
* deploying sinatra pg heroku
* environment variables
* heroku config variables
* usr-env-compile heroku
* heroku can&rsquo;t connect to server
* how to roll back a push to heroku
* how to recover from the embarrassment of an offline portfolio project
* how to start a llama farm</p>

<p>I finally found the answer (aka read the manual) with <a href="https://devcenter.heroku.com/articles/heroku-postgresql">Heroku Postgres</a></p>

<h3>First: Check to see if your database has been provisioned</h3>

<p>{% highlight bash %}
$ heroku addons | grep POSTGRES
{% endhighlight %}</p>

<p>I ran this command in my sinatra project and found nothing. NOTHING!</p>

<p>When Heroku told me that it couldn&rsquo;t find my database, that is because it hadn&rsquo;t MADE my database. So I&hellip;</p>

<h3>Second: Create a new database</h3>

<p>{% highlight bash %}
$ heroku addons:add heroku-postgresql:dev
Adding heroku-postgresql:dev on js-games&hellip; done, v42 (free)
Attached as HEROKU_POSTGRESQL_GOLD_URL
Database has been created and is available
 ! This database is empty. If upgrading, you can transfer
 ! data from another database with pgbackups:restore.
Use <code>heroku addons:docs heroku-postgresql:dev</code> to view documentation.{% endhighlight %}</p>

<p>YAY! My database has been created and found. Still, nothing wrong with&hellip;</p>

<h3>Third: Double check your database exists</h3>

<p>{% highlight bash %}
$ heroku config
=== js-games Config Vars
HEROKU_POSTGRESQL_GOLD_URL: postgres://∏∏∏∏∏∏∏∏∏∏∏∏∏∏:∏∏∏∏∏∏∏∏∏∏∏@ec2-##&ndash;###&ndash;###&ndash;##.compute-1.amazonaws.com:####/∏∏∏∏#∏##∏∏∏#∏#{% endhighlight %}</p>

<p>Heroku confesses that my database is stored on AWS, and gives a fairly detailed address (redacted on the grounds of national security).</p>

<h3>Fourth: Promote the new database to primary</h3>

<p>{% highlight bash %}
$ heroku pg:promote HEROKU_POSTGRESQL_GOLD_URL
Promoting HEROKU_POSTGRESQL_GOLD_URL to DATABASE_URL&hellip; done{% endhighlight %}</p>

<h3>Fifth: Check out the new database</h3>

<p>{% highlight bash %}
$ heroku pg:info
=== HEROKU_POSTGRESQL_GOLD_URL (DATABASE_URL)
Plan:        Dev
Status:      available
Connections: 1
PG Version:  9.2.4
Created:     2013-07-27 22:46 UTC
Data Size:   6.3 MB
Tables:      0
Rows:        0/10000 (In compliance)
Fork/Follow: Unsupported {% endhighlight %}</p>

<h3>TADA</h3>

<p>Do one final push to heroku and restart the server:
{% highlight bash %}
$ git commit -a -m &ldquo;fixes the last two hours of disasterous troubleshooting&rdquo;
$ git push heroku master
&hellip;
$ heroku restart
{% endhighlight %}</p>

<p>Awesome</p>
]]></content>
  </entry>
  
</feed>
