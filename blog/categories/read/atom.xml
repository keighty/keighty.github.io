<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Read | keighty]]></title>
  <link href="http://www.katieleonard.ca/blog/categories/read/atom.xml" rel="self"/>
  <link href="http://www.katieleonard.ca/"/>
  <updated>2018-07-16T09:12:41-07:00</updated>
  <id>http://www.katieleonard.ca/</id>
  <author>
    <name><![CDATA[katie leonard]]></name>
    <email><![CDATA[keighty.leonard@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Power of Moments]]></title>
    <link href="http://www.katieleonard.ca/blog/2018/the-power-of-moments/"/>
    <updated>2018-07-16T00:00:00-07:00</updated>
    <id>http://www.katieleonard.ca/blog/2018/the-power-of-moments</id>
    <content type="html"><![CDATA[<p>Time perception is subjective. The hours can slip by unnoticed when you are caught up in a task you enjoy (see <a href="https://en.wikipedia.org/wiki/Flow_(psychology">Flow</a>). Months and years can also escape if they are not marked by distinguishing milestones. In their book, <a href="https://www.amazon.com/Power-Moments-Certain-Experiences-Extraordinary/dp/1501147765">&ldquo;The Power of Moments,&rdquo; Chip and Dan Heath</a> explain why moments are important, how they occur naturally, and how we can create more of them. <!--more--></p>

<h2>What are moments and why are they important?</h2>

<p>A moment is an occasion of heightened emotion: a peak, a pit, or a transition. It can be a large or small achievement that is recognized and rewarded, a disaster that shakes your identity to its foundations, or a transitional milestone you recall clearly for years after the event, carving a clear line between life before and life after.</p>

<p>If you look back on your career, you will likely not remember any one specific day unless it contained a peak, a pit, or a transition. What you <em>will</em> remember are the moments you were promoted, layed off, or decided to change career paths entirely. Moments are important because they make up our mesh of memories, change our perception of time, and form our identities.</p>

<h2>You can manufacture moments</h2>

<p>40% of memories from college are from the month of September. It is a time of transition, yes, but also a period of novelty: new classes, new friends, new schedule. Once these firsts become routine, they stop standing out as moments. The authors share a lot of research about how moments occur naturally, and recommend a few strategies for recreating the conditions.</p>

<h4>Break the Script</h4>

<p>Do something spontaneous and out of the ordinary.</p>

<ul>
<li>take a different path on your commute to work</li>
<li>buy a weird vegetable at the grocery store and learn how to cook it</li>
</ul>


<h4>Stretch for insight</h4>

<p>Create an &lsquo;aha&rsquo; moment for yourself or someone else.</p>

<ul>
<li>solicit feedback from your peers</li>
<li>read a book from the other side of the political spectrum</li>
</ul>


<h4>Recognize others</h4>

<p>Pull your head out of your navel and notice the moments that your friends and coworkers are experiencing.</p>

<ul>
<li>create a moment for a coworker by sharing how their work has positively impacted you</li>
<li>send unsolicited positive feedback to a coworker&rsquo;s manager</li>
</ul>


<h4>Set and celebrate small milestones.</h4>

<p>We celebrate Big Decadeâ„¢ birthdays because they are round numbers. What other round numbers do you encounter in your life that could be celebrated?</p>

<ul>
<li>I am 9 short of reaching 100 pull requests on personal projects on GitHub, and 127 away from reaching 1000 PRs on GitHub at work.</li>
<li>A teammate just celebrated their 4th work-anniversary.</li>
<li>I have visited 10 National Parks in the last year, and I celebrate by adding to my National Park sticker collection!</li>
</ul>


<h4>Do something scary</h4>

<p>Heighten your emotional state by pushing yourself out of your comfort zone. Identify a fear and make a plan to tackle it:</p>

<ul>
<li>Afraid of traveling alone? Try a day of exploring your city alone.</li>
<li>Afraid of public speaking? Submit a talk proposal for a conference you want to attend.</li>
<li>Afraid of being embarassed or making a mistake at work? Make a personal commitment to ask a clarifying question in every meeting.</li>
</ul>


<h4>Build connections</h4>

<p>Experiences become moments when we share them with someone else. We celebrate together, share videos that make us laugh, or say &ldquo;did you see that?&rdquo; Find ways to build connections with the people around you.</p>

<h2>Read more about moments</h2>

<p>I don&rsquo;t want to look back at a stretch of years that were indistinguishable, and I love learning new strategies for keeping my life out of a rut. &ldquo;The Power of Moments&rdquo; contains an awesome reading list, including <a href="https://www.amazon.com/Chasing-Daylight-Forthcoming-Death-Transformed/dp/0071499938">&ldquo;Chasing Daylight&rdquo;, Andrew Postman&rsquo;s</a> reflections on life, relationships, and moments, after he was diagnosed with terminal cancer and given three to six months to live. He lived his last months with deliberate attention to his relationships, joys, and values, creating moments that stretched each hour into a day, each week into a month, and each month into a year. Postman acknowledges that it would be exhausting to live every day with such intensity when you believe you have years stretching ahead of you, but taking the time to create moments will make your years distinguishable and memorable.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Estimate != Commitment != Target]]></title>
    <link href="http://www.katieleonard.ca/blog/2015/software-estimation-is-hard/"/>
    <updated>2015-10-31T00:00:00-07:00</updated>
    <id>http://www.katieleonard.ca/blog/2015/software-estimation-is-hard</id>
    <content type="html"><![CDATA[<p>Software estimation is hard, but I didn&rsquo;t really understand why until I started reading <a href="http://www.amazon.com/Software-Estimation-Demystifying-Developer-Practices/dp/0735605351">Software Estimation: Demystifying the Black Art</a> by Steve McConnell. It was published in 2006, and is very much still relevant &mdash; there are more ways to do estimation wrong than to do it right.</p>

<p>The biggest &ldquo;aha&rdquo; moment for me was learning the difference between estimates, targets, and commitments. <!--more-->I always thought that estimates were commitments and treated them like targets. If a task took longer than my estimate, I would worry that I had blown the project plan. The source of my stress was really semantics, and a deep misunderstanding of project plans in general.</p>

<h4>1. An estimate is a range where there is a 90% chance of finding the completion date</h4>

<p>An estimate is not a single point in time &mdash; that is a target. There is uncertainty in software development, and uncertainty about the uncertainty.</p>

<blockquote><p>There is a limit to how well a project can go but no limit to how many problems can occur.</p></blockquote>

<p>Estimates are probability distrubutions of possible outcomes:</p>

<p><img class="left" src="/images/151031-software-estimation/estimation-chart.png"></p>

<p>Most of my experience in estimating projects has been to break a feature down into small tasks and estimate those. Tightly defined requirements for a task make it easier to estimate, but there are always complications that can throw things off track. Thinking about an estimate as a range of possibilities between the best and worst case scenarios reduces stress about being right the first time.</p>

<h4>2. A commitment is a promise to deliver defined functionality at a certain level of quality at a certain date.</h4>

<p>You can use estimates to plan commitments, but not the other way around. If ten features take a year to develop, but your customer needs to have something in six months, you can commit to delivering four or five features by that target, but there is no way you can deliver ten.</p>

<h4>3. A target is a single point in time, and is usually determined by business needs.</h4>

<p>A target has more in common with a commitment than an estimate &mdash; it can have no bearing on the time estimated to complete a project, but will often define the envelope of time. Like in the previous example, the target for delivery to the customer was six months, but the commitment could be four or five features, depending on the estimates for each feature.</p>

<p>Estimation must come before planning, and before you really understand all of the requirements for the project. More often than not, events that happen during the project will have a big impact on the assumptions made to estimate the project at the beginning. Estimates are hard, but McConnell has some awesome advice on how to get it right.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Clean Coder]]></title>
    <link href="http://www.katieleonard.ca/blog/2015/the-clean-coder/"/>
    <updated>2015-09-26T00:00:00-07:00</updated>
    <id>http://www.katieleonard.ca/blog/2015/the-clean-coder</id>
    <content type="html"><![CDATA[<p>In <a href="http://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073/ref=sr_1_1?ie=UTF8&amp;qid=1443288322&amp;sr=8-1&amp;keywords=the+clean+coder">The Clean Coder: A Code of Conduct for Professional Programmers</a>, Bob Martin (Uncle Bob) tells you what it means to be a professional programmer. Much of what distinguishes a professional from a non-professional can be reduced to responsibility: a professional is responsible for their project, their team, and their own career. <!--more--></p>

<p><a href="http://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073/ref=sr_1_1?ie=UTF8&amp;qid=1443288322&amp;sr=8-1&amp;keywords=the+clean+coder"><img class="left" src="/images/150926-clean-coder/cleancoder.jpg"></a></p>

<h2>Protect your projects</h2>

<p>Your first responsibility, according to Uncle Bob, is to your employer, which means doing the job that you have been hired to do.</p>

<ul>
<li><p><strong>Make reasonable estimates.</strong> Your project does not exist in isolation from other parts of the company. An estimate is a probability distribution of likely outcomes, not a single point in time. Many stakeholders rely on your estimates for coordinating marketing, sales, and other downstream tasks.</p></li>
<li><p><strong>Meet your commitments.</strong> Estimates are different from commitments. If you have committed to delivering a feature or a product by a target date, meet that date.</p></li>
</ul>


<blockquote><p>If it can&rsquo;t be done, you can still commit to actions that will bring you closer to the target. Finding out if it can be done can be one of the actions to commit to!</p></blockquote>

<ul>
<li><strong>Protect your time.</strong> An easy way to ensure the success of your project is to devote the time and energy you have already promised in your estimates. Meetings can be disruptive to your workflow, and you should decline any meeting that does not move your project forward. If you can&rsquo;t decline, ask for an agenda and clear goals before you accept.</li>
</ul>


<blockquote><p>Sometimes the meeting will be about something that interests you, but is not immediately necessary. You will have to choose whether you can afford the time. Be careful â€” there may be more than enough of these meetings to consume your days.</p></blockquote>

<h2>Protect your team</h2>

<blockquote><p>A team-player communicates frequently, keeps an eye out for his or her teammates, and executes his or her own responsibilities as well as possible.</p></blockquote>

<ul>
<li><strong>Stand by your original estimates</strong>, and don&rsquo;t confuse them with commitments. Your estimates should protect your team from long hours, undue management pressure, and unpleasant surprises. Don&rsquo;t promise what your team can&rsquo;t deliver.</li>
</ul>


<blockquote><p>Business likes to view estimates as commitments. Developers like to view estimates as guesses. The difference is profound.</p></blockquote>

<ul>
<li><strong>Mentor less experienced engineers.</strong> Contributing to the growth of everyone will make your team stronger. Don&rsquo;t wear your headphones to cut yourself off from interruptions. Making yourself available as a resource will get someone else on the team unstuck, which moves your project forward (Uncle Bob recommends using TDD instead of the Zone to pick up the stack if you have to drop it). â€œIt is unprofessional to be a loner or a recluse on a team."</li>
</ul>


<h2>Protect your career</h2>

<p>Your employer is not responsible for keeping your skills up to date. They are not required to ensure that you are aware of cutting edge technologies and languages.</p>

<blockquote><p>Your career is your responsibility. It is not your employer&rsquo;s responsibility to make sure you are marketable. It is not your employer&rsquo;s responsibility to train you, or to send you to conferences, or to buy you books. These things are your responsibility. Woe to the software developer who entrusts his career to his employer.</p></blockquote>

<ul>
<li><strong>Practice coding.</strong> Uncle Bob is a big proponent of practicing code. Performing code kata before starting work will put you in the right frame of mind.</li>
</ul>


<blockquote><p>Professionals practice. True professionals work hard to keep their skills sharp and ready. It is not enough to simply do your daily job and call that practice. Doing your job is daily performance, not practice. Practice is when you specifically exercise your skills outside of the performance of your job for the sole purpose of refining and enhancing those skills.</p></blockquote>

<ul>
<li><strong>Learn about the industry.</strong> Falling behind in new technologies will make you obsolete. You will not stay marketable to new employers (or even your current employer), if you do not stay current.</li>
</ul>


<p>Reading The Clean Coder was like sitting down with a mentor and asking how I can grow my career. I would recommend it for anyone entering the profession today!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bird by Bird]]></title>
    <link href="http://www.katieleonard.ca/blog/2015/bird-by-bird/"/>
    <updated>2015-03-01T00:00:00-08:00</updated>
    <id>http://www.katieleonard.ca/blog/2015/bird-by-bird</id>
    <content type="html"><![CDATA[<p>Virtue is its own reward, and so is writing. Anne Lamott&rsquo;s <a href="http://www.amazon.com/Bird-Some-Instructions-Writing-Life/dp/0385480016/ref=sr_1_1?ie=UTF8&amp;qid=1425241344&amp;sr=8-1&amp;keywords=bird+by+bird">Bird by Bird: Some Instructions on Writing and Life</a> is full of beautiful prose, characters, and personal anecdotes, and while her advice is tuned to the creative writer, there are three useful lessons that can be applied to all writing.</p>

<ol>
<li>write short assignments</li>
<li>write only what you can see through a 1-inch picture frame</li>
<li>write a terrible first draft</li>
</ol>


<p>Blogging about what I am learning and reading forces me to think about what I experience. Almost every day I learn another 1-inch picture frame of programming, and writing it down helps me understand it better. My ugly first drafts usually consist of a question, a few links to resources, and some console output &mdash; not Pulitzer Prize winning prose, but an awesome personal resource and record of growth.</p>

<blockquote><p>All you can give us is what life is about from your point of view. You are not going to be able to give us the plans to the submarine. Life is not a submarine. There are no plans.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Everybody Writes (and Why You Should Blog)]]></title>
    <link href="http://www.katieleonard.ca/blog/2015/everybody-writes/"/>
    <updated>2015-02-16T00:00:00-08:00</updated>
    <id>http://www.katieleonard.ca/blog/2015/everybody-writes</id>
    <content type="html"><![CDATA[<p>In <em>Everybody Writes</em><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>, Ann Handley teaches content marketers how to generate &ldquo;ridiculously good&rdquo; content. Anyone who has recently enjoyed the pain of the job hunt will notice that much of the advice can be adapted to self-marketing. In my recent code school experience, developing an online presence was as important as learning web development, and since it is hard to market yourself as a web developer without developing anything for the web, a blog is a great place to start. You have picked a career where your ability to learn is one of your most marketable skills, as well as your ability to communicate &mdash; both of which you can showcase in your blog. You don&rsquo;t have to worry about having something original to say: treat it as an opportunity to organize your thoughts and to teach a beginner what you know. Handley gives great advice for people learning to blog and how to generally optimize your online presence &mdash; both are great ways to market yourself as a fresh code-school alum.</p>

<!--more-->


<h3>Show up</h3>

<p>Write early, write often. If something is new to you, it will likely be new to someone else as well. The more writing practice you get, the easier it becomes &mdash; &ldquo;writing is a habit, not an art&rdquo;, and you can&rsquo;t help but improve in an art that you practice every day. Handley recommends starting with the ugly first draft<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> &mdash; make it ugly, don&rsquo;t delete anything, don&rsquo;t rephrase or reread. Just get it out of you and on to your screen, then walk away for a day. Maybe two. If you are really stuck on how to begin, you could start with &ldquo;Dear diary&rdquo;<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>. This helps you get in the mood to write, and keeps your tone conversational. Also, if you are writing to a non-technical person, it will keep your writing clear, and inspire you to give enough back story so that they aren&rsquo;t lost.</p>

<h3>Write a tight post</h3>

<h4>Decide on a goal</h4>

<p>Is it to teach? To share? To critique? The goal for technical blogs is not usually to obtain a following &mdash; it is to share a bit of experience that will turn up when another frustrated developer puts keywords into a search engine. An online presence is important, but it should not be a blow by blow of how hard it is to learn to code. A handy formula for creating quality content is:</p>

<blockquote><p>Utility * Inspiration * Empathy = Quality Content<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></p></blockquote>

<p>Make it useful, make it reader centric (even if that reader is you six months from now), and make it thoughtful.</p>

<h4>Forget the 5 paragraph essay format from high school</h4>

<p>I rarely read a long blog post from beginning to end, and the sweet spot for length is around 1500 words<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>. Make it easy for the reader to get the gist of your post by providing sub-headings, bold text, and code samples &mdash; these are strong visual elements that can help your reader anchor what they are learning.</p>

<h4>Rewrite</h4>

<p>Once you have written the ugly first draft with your goal in mind, rewrite it with the reader in mind &mdash; will they understand the context of what you are trying to get across? Assume the reader knows nothing, but isnâ€™t stupid. Find data and examples that illustrate what you are trying to share (and make sure that you give credit where credit is due<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup>).</p>

<h4>Work on your grammar</h4>

<p>After reframing, examine your sentence structure. Are you using a passive voice? Microsoft Word grammar check hates the passive voice, but I never knew what that meant. Try <a href="https://www.grammarly.com/">grammarly</a> if you need help, and even if you think you don&rsquo;t. Editing your own work is hard, because your brain will fill in all the things you meant to say but didn&rsquo;t. Also, put the important words at the start of the sentence, just in case the reader dozes off half-way through.</p>

<h3>About Me pages</h3>

<p>Be intentional about the words that describe you in your About Me page<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>. Describe your accomplishments with examples, and if possible, try to mirror the language used by the companies you want to work for. Check out the keywords they use, and make sure to encorporate them in your headlines and personal summary.</p>

<blockquote><p>About us pages arenâ€™t really about the company; instead they focus on relaying who they are <em>in relation to the visitor</em>.</p></blockquote>

<p>If your reader is an employer, let them know you are for hire &mdash; your posts should always be in the context of what you can do for the reader.</p>

<p>Showing up can be the hardest thing &mdash; finding something original to say, or fearing a public mistake is what keeps many people from writing, but blogging shows you are interested in, well, something. Being interesting means being interested in things, and wanting to share the things you find interesting is a natural follow through. Given the right mentorship, your technical abilities will grow, but getting in the door is step one. So, if you are looking to update your web presence, or create a web presence, this book is for you.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Handley, A. (2014). <a href="http://www.amazon.com/Everybody-Writes-Go--Creating-Ridiculously-ebook/dp/B00LMB5P0G/ref=sr_1_1?ie=UTF8&amp;qid=1424115248&amp;sr=8-1&amp;keywords=everybody+writes"><em>Everybody Writes : Your Go-To Guide to Creating Ridiculously Good Content</em></a>. Wiley &amp; Sons Canada, Limited, John.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>Tip 9: &ldquo;Embrace the Ugly First Draft&rdquo;, p. 41.<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>Tip 14: &ldquo;Start with <em>Dear Mom&hellip;</em>&rdquo;, p. 54.<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>&ldquo;Introduction&rdquo;, p. 7.<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>Tip 60: &ldquo;The Ideal Length for Blog Posts, Podcast, Facebook Posts, Tweets, and Other Marketing Content&rdquo;, p. 184.<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>Tip 57: &ldquo;Seek Permission, Not Forgiveness&rdquo;, p. 170.<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
<li id="fn:7">
<p>Tip 71: &ldquo;Writing the About Us Page&rdquo;, p 244.<a href="#fnref:7" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
