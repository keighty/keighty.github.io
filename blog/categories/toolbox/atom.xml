<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Toolbox | keighty]]></title>
  <link href="http://www.katieleonard.ca/blog/categories/toolbox/atom.xml" rel="self"/>
  <link href="http://www.katieleonard.ca/"/>
  <updated>2015-08-08T10:33:46-07:00</updated>
  <id>http://www.katieleonard.ca/</id>
  <author>
    <name><![CDATA[katie leonard]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Exploring the Stack]]></title>
    <link href="http://www.katieleonard.ca/blog/2015/exploring-the-stack/"/>
    <updated>2015-03-25T00:00:00-07:00</updated>
    <id>http://www.katieleonard.ca/blog/2015/exploring-the-stack</id>
    <content type="html"><![CDATA[<p>Another brilliant Rails troubleshooting technique I have recently added to my toolbox is <a href="https://github.com/pry/pry-stack_explorer"><code>pry-stack_explorer</code></a> as an add-on to <a href="https://github.com/pry/pry"><code>pry</code></a>.</p>

<h4>1. Add <code>pry</code> and <code>pry-stack_explorer</code> to the development/test group of your gemfile:</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:test</span><span class="p">,</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">pry</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">pry</span><span class="o">-</span><span class="n">stack_explorer</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>2. Add a binding pry anywhere in your code</h4>

<p><img src="/images/150325-show-stack/binding-pry.png"></p>

<h4>3. Enter <code>show-stack</code> at the pry prompt</h4>

<p><img src="/images/150325-show-stack/show-stack.png"></p>

<h4>4. Enter <code>up</code> or <code>down</code> to explore the state of the stack</h4>

<p><img src="/images/150325-show-stack/travel-the-stack.png"></p>

<h4>Other goodies</h4>

<ul>
<li>Pass a string to <code>up</code> or <code>down</code> and <code>pry-stack_explorer</code> will jump to the first frame that matches:</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Frame number: 0/108&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;From: /Users/keighty/Documents/projects/api_playground/app/models/user.rb @ line 4 User#full_name:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;3: def full_name
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; <span class="o">=</span>&gt; 4:   binding.pry&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;5:   <span class="s2">&quot;#{first_name} #{last_name}&quot;</span>
</span><span class='line'>6: end
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>6<span class="o">]</span> pry<span class="o">(</span>&lt;User&gt;<span class="o">)</span>&gt; up instrument&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Frame number: 3/108
</span><span class='line'>Frame <span class="nb">type</span>: method&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;From: /usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/activesupport-4.2.0/lib/active_support/notifications.rb @ line 166 ActiveSupport::Notifications.instrument:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;162: def instrument<span class="o">(</span>name, <span class="nv">payload</span> <span class="o">=</span> <span class="o">{})</span>
</span><span class='line'>163:   <span class="k">if </span>notifier.listening?<span class="o">(</span>name<span class="o">)</span>
</span><span class='line'>164:     instrumenter.instrument<span class="o">(</span>name, payload<span class="o">)</span> <span class="o">{</span> yield payload <span class="k">if </span>block_given? <span class="o">}</span>
</span><span class='line'>165:   <span class="k">else</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; <span class="o">=</span>&gt; 166:     yield payload <span class="k">if </span>block_given?&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;167:   end
</span><span class='line'>168: end
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>7<span class="o">]</span> pry<span class="o">(</span>ActiveSupport::Notifications<span class="o">)</span>&gt; down view&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Frame number: 1/108
</span><span class='line'>Frame <span class="nb">type</span>: method&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;From: /Users/keighty/Documents/projects/api_playground/app/views/greetings/hello.html.erb @ line 1 ActionView::CompiledTemplates#&lt;em&gt;app_views_greetings_hello_html_erb&lt;/em&gt;__3157151947187763552_70316982999600:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; <span class="o">=</span>&gt; 1: &lt;h1&gt;Greetings, &amp;lt;%<span class="o">=</span> @person.full_name %&gt;&lt;/h1&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;2: &amp;lt;p&amp;gt;This is a greetings view!&amp;lt;/p&amp;gt;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>Pass an integer to <code>up</code> or <code>down</code> to leap over frames</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>8<span class="o">]</span> pry<span class="o">(</span>&amp;lt;Class:0x007fe7eb821330&gt;&gt;<span class="o">)</span>&gt; up 5&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Frame number: 6/108
</span><span class='line'>Frame <span class="nb">type</span>: block&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;From: /usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/actionview-4.2.0/lib/action_view/renderer/template_renderer.rb @ line 54 ActionView::TemplateRenderer#render_template:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;49: def render_template<span class="o">(</span>template, <span class="nv">layout_name</span> <span class="o">=</span> nil, <span class="nv">locals</span> <span class="o">=</span> nil<span class="o">)</span> <span class="c">#:nodoc:</span>
</span><span class='line'>50:   view, <span class="nv">locals</span> <span class="o">=</span> @view, locals <span class="o">||</span> <span class="o">{}</span>
</span><span class='line'>51:
</span><span class='line'>52:   render_with_layout<span class="o">(</span>layout_name, locals<span class="o">)</span> <span class="k">do</span> |layout|
</span><span class='line'>53:     instrument<span class="o">(</span>:template, :identifier <span class="o">=</span>&amp;gt; template.identifier, :layout <span class="o">=</span>&amp;gt; layout.try<span class="o">(</span>:virtual_path<span class="o">))</span> <span class="k">do</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; <span class="o">=</span>&gt; 54:       template.render<span class="o">(</span>view, locals<span class="o">)</span> <span class="o">{</span> |&lt;em&gt;name| view._layout_for<span class="o">(</span>&lt;/em&gt;name<span class="o">)</span> <span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;55:     end
</span><span class='line'>56:   end
</span><span class='line'>57: end
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>9<span class="o">]</span> pry<span class="o">(</span>&amp;lt;ActionView::TemplateRenderer&gt;<span class="o">)</span>&gt; down 2&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Frame number: 4/108
</span><span class='line'>Frame <span class="nb">type</span>: method&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;From: /usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/actionview-4.2.0/lib/action_view/template.rb @ line 333 ActionView::Template#instrument:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;331: def instrument<span class="o">(</span>action, &amp;amp;block<span class="o">)</span>
</span><span class='line'>332:   <span class="nv">payload</span> <span class="o">=</span> <span class="o">{</span> virtual_path: @virtual_path, identifier: @identifier <span class="o">}</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; <span class="o">=</span>&gt; 333:   ActiveSupport::Notifications.instrument<span class="o">(</span>&amp;ldquo;#<span class="o">{</span>action<span class="o">}</span>.action_view&amp;rdquo;, payload, &amp;amp;block<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;334: end
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>To learn even more awesome ways to use <code>pry</code> and <code>pry-stack_explorer</code>, check out the docs:</p>

<ul>
<li><a href="https://github.com/pry/pry">github.com/pry/pry</a>.</li>
<li><a href="https://github.com/pry/pry-stack_explorer">github.com/pry/pry-stack_explorer</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Troubleshooting Nested Scopes in Angular]]></title>
    <link href="http://www.katieleonard.ca/blog/2015/troubleshooting-nested-scopes-in-angular/"/>
    <updated>2015-03-11T00:00:00-07:00</updated>
    <id>http://www.katieleonard.ca/blog/2015/troubleshooting-nested-scopes-in-angular</id>
    <content type="html"><![CDATA[<p>Many beginner Angular tutorials start with a set of canned data, an input field, and a search filter, so it was a natural place to start on my side project, Virtual Playbill. With even a small data set, watching the DOM change based on search criteria was a thrilling achievement. In the intervening months, as features were added, rebuilt, or taken away, I had inadvertently broken the search box. The tutorials were still available, and still fairly basic, but I couldn&rsquo;t get it to work. Not until I found a couple of invaluable tools for troubleshooting overlapping scopes: <!--more--></p>

<h4>1. Use the developer tools console</h4>

<p>This handy trick will give you a console object corresponding to that element&rsquo;s scope:</p>

<ul>
<li>select a DOM element in using the chrome developer tools</li>
<li>enter <code>angular.element($0).scope()</code> into the console pane (<code>$0</code> is a global variable holding a reference to the selected DOM element)</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// with the search box selected&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">blockquote</span><span class="o">&gt;&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">$0</span><span class="p">).</span><span class="nx">scope</span><span class="p">()</span><span class="o">&lt;</span><span class="err">/p&gt;&lt;/blockquote&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">$get</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">$new</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">$$ChildScope</span><span class="p">.</span><span class="nx">$$ChildScope</span> <span class="p">{</span><span class="nx">$$childTail</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="nx">$$childHead</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span> <span class="nx">$$nextSibling</span><span class="o">:</span> <span class="nx">$get</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">$new</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">$$ChildScope</span><span class="p">.</span><span class="nx">$$ChildScope</span><span class="p">,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">hellip</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">$parent</span><span class="o">:</span> <span class="nx">h</span>
</span><span class='line'>  <span class="nx">playbillRows</span><span class="o">:</span> <span class="nb">Array</span><span class="p">[</span><span class="mi">23</span><span class="p">]</span>
</span><span class='line'>  <span class="nx">playbills</span><span class="o">:</span> <span class="nb">Array</span><span class="p">[</span><span class="mi">68</span><span class="p">]</span>
</span><span class='line'>  <span class="nx">search</span><span class="o">:</span> <span class="nb">Object</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">title</span><span class="o">:</span> <span class="s2">&quot;this is search text&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="c1">// with the playbill area selected&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">blockquote</span><span class="o">&gt;&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">$0</span><span class="p">).</span><span class="nx">scope</span><span class="p">()</span><span class="o">&lt;</span><span class="err">/p&gt;&lt;/blockquote&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">$get</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">$new</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">$$ChildScope</span><span class="p">.</span><span class="nx">$$ChildScope</span> <span class="p">{</span> <span class="nx">$$childTail</span><span class="o">:</span> <span class="nx">$get</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">$new</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">$$ChildScope</span><span class="p">.</span><span class="nx">$$ChildScope</span><span class="p">,</span> <span class="nx">$$childHead</span><span class="o">:</span> <span class="nx">$get</span><span class="p">.</span><span class="nx">h</span><span class="p">.</span><span class="nx">$new</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">$$ChildScope</span><span class="p">.</span><span class="nx">$$ChildScope</span><span class="p">,</span> <span class="nx">$$nextSibling</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">hellip</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">$parent</span><span class="o">:</span> <span class="nx">h</span>
</span><span class='line'>  <span class="nx">playbillRows</span><span class="o">:</span> <span class="nb">Array</span><span class="p">[</span><span class="mi">23</span><span class="p">]</span>
</span><span class='line'>  <span class="nx">playbills</span><span class="o">:</span> <span class="nb">Array</span><span class="p">[</span><span class="mi">68</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Things are definitely looking different between the scope containing my search box and the scope where I am laying out the view: the second scope appears to be a sibling of the first. I needed something a little more visual before it completely sunk in, though.</p>

<h4>2. Use <a href="https://chrome.google.com/webstore/detail/ng-inspector-for-angularj/aadgmnobpdmgmigaicncghmmoeflnamj">ng-inspector</a></h4>

<p>ng-inpector is a browser extension that allows you to navigate your angular app as if it were a file directory:</p>

<p><img src="/images/vp_ng_inspector.png"></p>

<p>I can see at a glance that the scope containing the search box (#2), is separate from the scope where I am laying out my view (the unnamed scope #5).</p>

<p>Because of these tools, I have learned that multiple instances of the same controller do not share scope. Using ng-router, I declared the controller for the view:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="o">&amp;</span><span class="nx">hellip</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">when</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="err">/&amp;rsquo;, {&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">templateUrl</span><span class="o">:</span> <span class="s1">&#39;views/index.html&#39;</span><span class="p">,</span>
</span><span class='line'><span class="nx">controller</span><span class="o">:</span> <span class="s1">&#39;PlaybillController&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">hellip</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In my layout, I had declared the controller once more:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>layout.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="ni">&amp;hellip;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">&quot;PlaybillController&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>form class=&quot;navbar-form navbar-left&quot; role=&quot;search&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>div class=&quot;form-group&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search shows&quot; ng-model=&quot;search.title&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/form<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="ni">&amp;hellip;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The search box was already in the context of a Playbill Controller, and I had inadvertently put in another. The solution was to simply remove the second ng-controller:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>layout.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="ni">&amp;hellip;</span>
</span><span class='line'>  <span class="nt">&lt;div&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>form class=&quot;navbar-form navbar-left&quot; role=&quot;search&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>div class=&quot;form-group&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search shows&quot; ng-model=&quot;search.title&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/form<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="ni">&amp;hellip;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I have been growing my Ruby/Rails troubleshooting toolbox for a while now, and it is good to get one started for angular as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debugging Techniques]]></title>
    <link href="http://www.katieleonard.ca/blog/2015/debugging-techniques/"/>
    <updated>2015-02-02T00:00:00-08:00</updated>
    <id>http://www.katieleonard.ca/blog/2015/debugging-techniques</id>
    <content type="html"><![CDATA[<p>I am working on upgrading an application from Rails 3.0 to Rails 3.2. While the numbers tell you it is a minor version change, there are definitely some major challenges. Digging through Rails and gem internals has forced me to add new strategies to my debugging toolbox, and here are a few of the essentials&hellip;<!--more--></p>

<h3><a href="https://github.com/burke/zeus">Zeus</a></h3>

<p>Zeus is a gem that preloads your Rails app and keeps it loaded, making test driven development fast. Just type <code>zeus start</code> in one console window, and any of the listed commands in another console window.</p>

<p><img src="/images/zeus_start.png"></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>zeus <span class="nb">test test</span>/models/user_test.rb
</span><span class='line'>Run options: &amp;mdash;seed 32298&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Running:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Finished in 0.045991s, 21.7434 runs/s, 21.7434 assertions/s.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;1 runs, 1 assertions, 0 failures, 0 errors, 0 skips
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Run a specific test in a file by passing a regex argument:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>zeus <span class="nb">test test</span>/models/user_test.rb -n &amp;ldquo;/test_user_description_has_full_name/&amp;rdquo;
</span><span class='line'>Run options: -n /test_user_description_has_full_name/ &amp;mdash;seed 17927&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Running:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Finished in 0.044550s, 22.4467 runs/s, 22.4467 assertions/s.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;1 runs, 1 assertions, 0 failures, 0 errors, 0 skips
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3><a href="https://github.com/pry/pry">Pry</a></h3>

<p>The Pry gem allows you to set break points and open an interactive debug session at any place in your code using <code>binding.pry</code>. A great way to debug a failing test is to place a pry at the top of the test and check your setup:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Pry into a test </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">test_helper</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;class UserTest &amp;lt; ActiveSupport::TestCase</span>
</span><span class='line'><span class="sr">  def test_user_description_has_full_name&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">first_name</span><span class="p">:</span> <span class="s2">&quot;hello&quot;</span><span class="p">,</span> <span class="n">last_name</span><span class="p">:</span> <span class="s2">&quot;kitty&quot;</span><span class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">&quot;kitty@example.com&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'>
</span><span class='line'><span class="n">assert_equal</span> <span class="s2">&quot;hello kitty&quot;</span><span class="p">,</span> <span class="n">user</span><span class="o">.</span><span class="n">full_name</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>zeus <span class="nb">test test</span>/models/user_test.rb -n &amp;ldquo;/test_user_description_has_full_name/&amp;rdquo;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Run options: -n /test_user_description_has_full_name/ &amp;mdash;seed 21519&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Running:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;From: /Users/keighty/api_playground/test/models/user_test.rb @ line 7 UserTest#test_user_description_has_full_name:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt; 4: def test_user_description_has_full_name
</span><span class='line'> 5:   <span class="nv">user</span> <span class="o">=</span> User.create<span class="o">(</span>first_name: <span class="s2">&quot;hello&quot;</span>, last_name: <span class="s2">&quot;kitty&quot;</span>, email: <span class="s2">&quot;kitty@example.com&quot;</span><span class="o">)</span>
</span><span class='line'> 6:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; <span class="o">=</span>&gt;  7:   binding.pry&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt; 8:
</span><span class='line'> 9:   assert_equal <span class="s2">&quot;hello kitty&quot;</span>, user.full_name
</span><span class='line'>10: end
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>1<span class="o">]</span> pry<span class="o">(</span><span class="c">#&lt;UserTest&gt;)&gt; user&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">=</span>&gt; <span class="c">#&amp;lt;User:0x007fa054180618</span>
</span><span class='line'> id: 980190963,
</span><span class='line'> first_name: &amp;ldquo;hello&amp;rdquo;,
</span><span class='line'> last_name: &amp;ldquo;kitty&amp;rdquo;,
</span><span class='line'> email: &amp;ldquo;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#x61;&amp;#105;&amp;#108;&amp;#116;&amp;#x6f;&amp;#58;&amp;#x6b;&amp;#x69;&amp;#x74;&amp;#116;&amp;#121;&amp;#64;&amp;#x65;&amp;#120;&amp;#97;&amp;#109;&amp;#112;&amp;#108;&amp;#x65;&amp;#46;&amp;#99;&amp;#x6f;&amp;#x6d;&quot;</span>&gt;&amp;#x6b;&amp;#105;&amp;#x74;&amp;#116;&amp;#x79;&amp;#64;&amp;#101;&amp;#x78;&amp;#x61;&amp;#x6d;&amp;#112;&amp;#x6c;&amp;#101;&amp;#46;&amp;#99;&amp;#x6f;&amp;#x6d;&lt;/a&gt;&amp;rdquo;,
</span><span class='line'> created_at: Sat, 07 Feb 2015 16:52:21 UTC +00:00,
</span><span class='line'> updated_at: Sat, 07 Feb 2015 16:52:21 UTC +00:00&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Your pry is a debug console with more than a few extra features. Here are my favourites:</p>

<ul>
<li><code>ls object</code> to see all the methods available on the object:</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>3<span class="o">]</span> pry<span class="o">(</span><span class="c">#&lt;UserTest&gt;)&gt; ls user&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;ActiveRecord::Core#methods:
</span><span class='line'>  &amp;lt;<span class="o">=</span>&gt;                 eql?                          <span class="nb">hash          readonly</span>!
</span><span class='line'>  <span class="o">==</span>                  freeze                        init_with     <span class="nb">readonly</span>?
</span><span class='line'>  connection_handler  frozen?                       inspect       set_transaction_state
</span><span class='line'>  encode_with         has_transactional_callbacks?  pretty_print  slice
</span><span class='line'>ActiveRecord::Persistence#methods:
</span><span class='line'>  becomes     delete      increment!   toggle!           update_attributes
</span><span class='line'>  becomes!    destroy!    new_record?  update            update_attributes!
</span><span class='line'>  decrement   destroyed?  persisted?   update!           update_column
</span><span class='line'>  decrement!  increment   toggle       update_attribute  update_columns
</span><span class='line'>ActiveRecord::Scoping#methods:
</span><span class='line'>  initialize_internals_callback  populate_with_current_scope_attributes
</span><span class='line'>&amp;hellip;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><code>whereami 10</code> to show 10 lines above and below your breakpoint:</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>5<span class="o">]</span> pry<span class="o">(</span><span class="c">#&lt;UserTest&gt;)&gt; whereami 10&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;From: /Users/keighty/api_playground/test/models/user_test.rb @ line 7 UserTest#test_user_description_has_full_name:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt; 1: require <span class="s1">&#39;test_helper&#39;</span>
</span><span class='line'> 2:
</span><span class='line'> 3: class UserTest &amp;lt; ActiveSupport::TestCase
</span><span class='line'> 4:   def test_user_description_has_full_name
</span><span class='line'> 5:     <span class="nv">user</span> <span class="o">=</span> User.create<span class="o">(</span>first_name: <span class="s2">&quot;hello&quot;</span>, last_name: <span class="s2">&quot;kitty&quot;</span>, email: <span class="s2">&quot;kitty@example.com&quot;</span><span class="o">)</span>
</span><span class='line'> 6:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; <span class="o">=</span>&gt;  7:     binding.pry&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt; 8:
</span><span class='line'> 9:     assert_equal <span class="s2">&quot;hello kitty&quot;</span>, user.full_name
</span><span class='line'>10:   end
</span><span class='line'>11:
</span><span class='line'>12: end
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><code>cd object.method</code> to navigate the object stack as if it were a folder structure (and <code>ls</code> to view properites):</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>1<span class="o">]</span> pry<span class="o">(</span><span class="c">#&lt;UserTest&gt;)&gt; cd user.full_name&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>2<span class="o">]</span> pry<span class="o">(</span>&amp;ldquo;hello kitty&amp;rdquo;<span class="o">)</span>:1&gt; ls&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Comparable#methods: &amp;lt;  &amp;lt;<span class="o">=</span>  &gt;  &gt;<span class="o">=</span>  between?
</span><span class='line'>JSON::Ext::Generator::GeneratorMethods::String#methods:
</span><span class='line'>  to_json_raw  to_json_raw_object  to_json_without_active_support_encoder
</span><span class='line'>String#methods:
</span><span class='line'>  %                  downcase        lstrip!           strip_heredoc
</span><span class='line'>  *                  downcase!       match             sub
</span><span class='line'>  +                  dump            mb_chars          sub!
</span><span class='line'>  &amp;lt;&amp;lt;                 each_byte       next              succ
</span><span class='line'>  &amp;lt;<span class="o">=</span>&gt;                each_char       next!             succ!
</span><span class='line'>  <span class="o">==</span>                 each_codepoint  not_ascii_only?   <span class="nv">sum</span>
</span><span class='line'>  <span class="o">===</span>                each_line       oct               <span class="nv">swapcase</span>
</span><span class='line'>  <span class="o">=</span>~                 empty?          ord               swapcase!
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>These are the features I use most often, but checkout the <a href="http://pryrepl.org/">documentation</a> for more.</p>

<h3>Method Method Method</h3>

<p>Method name collisions can happen in a sprawling legacy codebase, so determining the source is important for debugging. The Ruby language has anticipated this difficulty, and since methods are objects themselves, they created the <a href="http://www.ruby-doc.org/core-2.2.0/Method.html">Method</a> module to access the method object. You can source, extract, unbind, and otherwise manipulate methods in a lot of ways:</p>

<p>
```
[1] pry(#<UserTest>)> method = user.method(:full_name)
=> #&lt;Method: User#full_name></p>

<p>[2] pry(#<UserTest>)> method.owner
=> User(id: integer, first_name: string, last_name: string, email: string, created_at: datetime, updated_at: datetime)</p>

<p>[3] pry(#<UserTest>)> method.source_location
=> [&ldquo;/Users/keighty/api_playground/app/models/user.rb&rdquo;, 2]
```
</p>

<h3>Logger</h3>

<p>Soemtimes the Rails bug you are hunting turns up in the SQL behind your query. When you are in a pry console, the SQL is not displayed by default, but you can turn on query logging by creating an <code>ActiveRecord::Base.logger</code> object:</p>

<p>
```</p>

<h1>before the logger</h1>

<p>[1] pry(#<UserTest>)> User.find(980190963)</p>

<p>=> #&lt;User:0x007fa0556f4fd0
 id: 980190963,
 first_name: &ldquo;hello&rdquo;,
 last_name: &ldquo;kitty&rdquo;,
 email: &ldquo;<a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#58;&#107;&#105;&#x74;&#116;&#121;&#64;&#x65;&#120;&#97;&#109;&#112;&#x6c;&#101;&#46;&#99;&#x6f;&#x6d;">&#107;&#105;&#x74;&#116;&#x79;&#64;&#101;&#x78;&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#109;</a>&rdquo;,
 created_at: Sat, 07 Feb 2015 16:52:21 UTC +00:00,
 updated_at: Sat, 07 Feb 2015 16:52:21 UTC +00:00></p>

<p>[2] pry(#<UserTest>)> ActiveRecord::Base.logger = Logger.new STDOUT;</p>

<p>[3] pry(#<UserTest>)> User.find(980190963)</p>

<p>D, [2015-02-07T09:28:34.892017 #10468] DEBUG &mdash; :
User Load (0.1ms)  SELECT  &ldquo;users&rdquo;.* FROM &ldquo;users&rdquo; WHERE &ldquo;users&rdquo;.&ldquo;id&rdquo; = ? LIMIT 1  [[&ldquo;id&rdquo;, 980190963]]</p>

<p>=> #&lt;User:0x007fa05c788c10
 id: 980190963,
 first_name: &ldquo;hello&rdquo;,
 last_name: &ldquo;kitty&rdquo;,
 email: &ldquo;<a href="&#109;&#x61;&#105;&#x6c;&#x74;&#111;&#58;&#x6b;&#x69;&#116;&#x74;&#121;&#64;&#x65;&#120;&#97;&#109;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#x6d;">&#107;&#105;&#x74;&#116;&#121;&#x40;&#101;&#120;&#97;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#99;&#x6f;&#109;</a>&rdquo;,
 created_at: Sat, 07 Feb 2015 16:52:21 UTC +00:00,
 updated_at: Sat, 07 Feb 2015 16:52:21 UTC +00:00>
```
</p>

<p>If you find that you are always creating a logger, add these lines to a <code>.pryrc</code> file in your home directory:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">if </span>defined?<span class="o">(</span>Rails<span class="o">)</span> &amp;amp;&amp;amp; Rails.env
</span><span class='line'>  require &amp;lsquo;logger&amp;rsquo;
</span><span class='line'>  ActiveRecord::Base.logger <span class="o">=</span> Logger.new<span class="o">(</span>STDOUT<span class="o">)</span>
</span><span class='line'>  ActiveRecord::Base.clear_active_connections!
</span><span class='line'>end%
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Globals</h3>

<p>If you are bug hunting deep inside a gem or rails internals, and are trying to pry into a module that is loaded many times before it hits the buggy line of code, a simple <code>binding.pry</code> will have you stepping through an impossible amount of setup. Try setting a global variable to <code>true</code> right before the buggy line, and <code>binding.pry</code> on that condition:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  api_playground  zeus <span class="nb">test</span> /Users/keighty/api_playground/test/models/user_test.rb -n &amp;ldquo;/test_user_description_has_full_name/&amp;rdquo;
</span><span class='line'>Run options: -n /test_user_description_has_full_name/ &amp;mdash;seed 28811&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Running:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;From: /Users/keighty/api_playground/app/models/user.rb @ line 5 User#full_name:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;2: def full_name
</span><span class='line'>3:   <span class="nv">$bedug</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'>4:   <span class="s2">&quot;#{first_name} #{last_name}&quot;</span>
</span><span class='line'>5:   binding.pry <span class="k">if</span> <span class="nv">$bedug</span>
</span><span class='line'>6: end
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>A global will maintain its state no matter how many times the code is loaded, so be sure to set the variable to false if you are stepping past the first break.</p>

<h3>Caller</h3>

<p>Calling <code>caller</code> at a pry prompt will output the current execution stack:</p>

<p>
<code>
[1] pry(#&lt;User&gt;)&gt; caller
=&gt; ["/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/pry_instance.rb:355:in `eval'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/pry_instance.rb:355:in `evaluate_ruby'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/pry_instance.rb:323:in `handle_line'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/pry_instance.rb:243:in `block (2 levels) in eval'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/pry_instance.rb:242:in `catch'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/pry_instance.rb:242:in `block in eval'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/pry_instance.rb:241:in `catch'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/pry_instance.rb:241:in `eval'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/repl.rb:77:in `block in repl'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/repl.rb:67:in `loop'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/repl.rb:67:in `repl'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/repl.rb:38:in `block in start'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/input_lock.rb:61:in `call'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/input_lock.rb:61:in `__with_ownership'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/input_lock.rb:79:in `with_ownership'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/repl.rb:38:in `start'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/repl.rb:15:in `start'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/pry_class.rb:169:in `start'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/pry-0.10.1/lib/pry/core_extensions.rb:43:in `pry'",
 "/Users/keighty/api_playground/app/models/user.rb:5:in `full_name'",
 "/Users/keighty/api_playground/test/models/user_test.rb:6:in `test_user_description_has_full_name'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/minitest-5.5.1/lib/minitest/test.rb:108:in `block (3 levels) in run'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/minitest-5.5.1/lib/minitest/test.rb:206:in `capture_exceptions'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/minitest-5.5.1/lib/minitest/test.rb:105:in `block (2 levels) in run'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/minitest-5.5.1/lib/minitest/test.rb:258:in `time_it'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/minitest-5.5.1/lib/minitest/test.rb:104:in `block in run'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/minitest-5.5.1/lib/minitest.rb:327:in `on_signal'",
:
</code>
</p>

<p><code>caller</code> is a <a href="http://www.ruby-doc.org/core-2.2.0/Kernel.html#method-i-caller">Kernel method</a>. Pass a start line and a line limit to truncate the stack:</p>

<p>
<code>
[11] pry(#&lt;User&gt;)&gt; caller(20, 5)
=&gt; ["/Users/keighty/api_playground/app/models/user.rb:5:in `full_name'",
 "/Users/keighty/api_playground/test/models/user_test.rb:6:in `test_user_description_has_full_name'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/minitest-5.5.1/lib/minitest/test.rb:108:in `block (3 levels) in run'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/minitest-5.5.1/lib/minitest/test.rb:206:in `capture_exceptions'",
 "/usr/local/var/rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/gems/minitest-5.5.1/lib/minitest/test.rb:105:in `block (2 levels) in run'"]
</code>
</p>

<p>The first 20 or so lines are usually from the pry session so they are easily ignored. I can see that the User.full_name method is being called from my test &mdash; a trivial case, but it comes in very handy when debugging a deeper stack.</p>

<h3>Errors</h3>

<p>When models have many association dependencies, satisfying the validations of many dependencies can be tricky without descriptive errors. In Rails 3.2, the error storage was changed from an <a href="http://www.rubydoc.info/docs/rails/3.0.0/ActiveModel/Errors">OrderedHash</a> to a first class ruby object in <a href="http://www.rubydoc.info/docs/rails/3.2.8/ActiveModel/Errors">ActiveModel</a>. While the interface has changed, its value remains:</p>

<p>
```
[1] pry(main)> user = User.create
=> #&lt;User:0x007fa054525318
 id: nil,
 first_name: nil,
 last_name: nil,
 email: nil,
 created_at: nil,
 updated_at: nil></p>

<h1>Why does my object not have an id?</h1>

<p>[2] pry(main)> user.errors
=> #&lt;ActiveModel::Errors:0x007fa05451fda0
 @base=
  #&lt;User:0x007fa054525318
   id: nil,
   first_name: nil,
   last_name: nil,
   email: nil,
   created_at: nil,
   updated_at: nil>,
 @messages={:first_name=>[&ldquo;can&rsquo;t be blank&rdquo;], :last_name=>[&ldquo;can&rsquo;t be blank&rdquo;]}></p>

<p>[3] pry(main)> user.errors.full_messages
=> [&ldquo;First name can&rsquo;t be blank&rdquo;, &ldquo;Last name can&rsquo;t be blank&rdquo;]</p>

<h1>oooooh&hellip; validations</h1>

<p>```
</p>
]]></content>
  </entry>
  
</feed>
